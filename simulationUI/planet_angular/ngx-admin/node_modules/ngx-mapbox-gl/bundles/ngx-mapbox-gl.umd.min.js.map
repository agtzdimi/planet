{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ngx-mapbox-gl/lib/map/map.service.ts","ng://ngx-mapbox-gl/lib/control/control.component.ts","ng://ngx-mapbox-gl/lib/control/attribution-control.directive.ts","ng://ngx-mapbox-gl/lib/control/fullscreen-control.directive.ts","ng://ngx-mapbox-gl/lib/control/geocoder-control.directive.ts","ng://ngx-mapbox-gl/lib/control/geolocate-control.directive.ts","ng://ngx-mapbox-gl/lib/control/navigation-control.directive.ts","ng://ngx-mapbox-gl/lib/control/scale-control.directive.ts","ng://ngx-mapbox-gl/lib/marker/marker.component.ts","ng://ngx-mapbox-gl/lib/source/geojson/geojson-source.component.ts","ng://ngx-mapbox-gl/lib/source/geojson/feature.component.ts","ng://ngx-mapbox-gl/lib/draggable/draggable.directive.ts","ng://ngx-mapbox-gl/lib/image/image.component.ts","ng://ngx-mapbox-gl/lib/layer/layer.component.ts","ng://ngx-mapbox-gl/lib/map/map.component.ts","ng://ngx-mapbox-gl/lib/marker-cluster/marker-cluster.component.ts","ng://ngx-mapbox-gl/lib/popup/popup.component.ts","ng://ngx-mapbox-gl/lib/source/canvas-source.component.ts","ng://ngx-mapbox-gl/lib/source/image-source.component.ts","ng://ngx-mapbox-gl/lib/source/raster-source.component.ts","ng://ngx-mapbox-gl/lib/source/vector-source.component.ts","ng://ngx-mapbox-gl/lib/source/video-source.component.ts","ng://ngx-mapbox-gl/lib/ngx-mapbox-gl.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","MAPBOX_API_KEY","InjectionToken","MapService","zone","MglResizeEventEmitter","mapCreated","AsyncSubject","mapLoaded","layerIdsToRemove","sourceIdsToRemove","markersToRemove","popupsToRemove","imageIdsToRemove","subscription","Subscription","mapCreated$","asObservable","mapLoaded$","setup","options","_this","onStable","pipe","first","subscribe","MapboxGl","accessToken","customMapboxApiUrl","createMap","mapOptions","hookEvents","mapEvents","undefined","complete","destroyMap","unsubscribe","mapInstance","remove","updateMinZoom","minZoom","runOutsideAngular","setMinZoom","updateMaxZoom","maxZoom","setMaxZoom","updateScrollZoom","status","scrollZoom","enable","disable","updateDragRotate","dragRotate","updateTouchZoomRotate","touchZoomRotate","updateDoubleClickZoom","doubleClickZoom","updateKeyboard","keyboard","updateDragPan","dragPan","updateBoxZoom","boxZoom","updateStyle","style","setStyle","updateMaxBounds","maxBounds","setMaxBounds","changeCanvasCursor","cursor","getCanvasContainer","queryRenderedFeatures","pointOrBox","parameters","panTo","center","move","movingMethod","movingOptions","zoom","bearing","pitch","getZoom","getCenter","getBearing","getPitch","addLayer","layer","bindEvents","before","keys","layerOptions","forEach","key","tkey","layerEvents","click","observers","on","id","evt","run","emit","mouseEnter","mouseLeave","mouseMove","removeLayer","layerId","addMarker","marker","offset","markersOptions","anchor","draggable","element","childNodes","markerInstance","MapboxGl.Marker","markersEvents","dragStart","event","target","drag","dragEnd","lngLat","feature","setLngLat","addTo","removeMarker","createPopup","popup","popupOptions","popupInstance","MapboxGl.Popup","setDOMContent","popupEvents","close","open","addPopupToMap","skipOpenEvent","_listeners","addPopupToMarker","setPopup","removePopupFromMap","skipCloseEvent","removePopupFromMarker","addControl","control","position","removeControl","loadAndAddImage","imageId","url","loadImage","error","image","addImage","data","removeImage","addSource","sourceId","source","getSource","removeSource","setAllLayerPaintProperty","paint","setPaintProperty","setAllLayerLayoutProperty","layout","setLayoutProperty","setLayerFilter","filter","setFilter","setLayerBefore","beforeId","moveLayer","setLayerZoomRange","fitBounds","bounds","fitScreenCoordinates","points","getCurrentViewportBbox","canvas","getCanvas","w","parseInt","h","upLeft","unproject","toArray","upRight","downRight","downLeft","bbox","polygon","applyChanges","removeLayers","removeSources","removeMarkers","removePopups","removeImages","NgZone","assertNotInAngularZone","MapboxGl.Map","window","test","navigator","userAgent","subChanges","onMicrotaskEmpty","subResize","resizeEvent","resize","add","_b","tslib_1.__values","_c","events","load","mouseDown","mouseUp","dblClick","mouseOver","mouseOut","contextMenu","touchStart","touchEnd","touchMove","touchCancel","wheel","moveStart","moveEnd","zoomStart","zoomEvt","zoomEnd","rotateStart","rotate","rotateEnd","pitchStart","pitchEvt","pitchEnd","boxZoomStart","boxZoomEnd","boxZoomCancel","webGlContextLost","webGlContextRestored","render","styleData","sourceData","dataLoading","styleDataLoading","sourceDataLoading","idle","obj","prop","split","shift","toString","Injectable","Optional","type","Inject","args","decorators","CustomControl","container","onAdd","onRemove","removeChild","getDefaultPosition","ControlComponent","ngAfterContentInit","content","nativeElement","ngOnDestroy","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","Input","ViewChild","AttributionControlDirective","ngOnInit","Error","compact","AttributionControl","Directive","Host","FullscreenControlDirective","FullscreenControl","MapboxGeocoder","require","MAPBOX_GEOCODER_API_KEY","GeocoderControlDirective","clear","EventEmitter","loading","results","proximity","country","placeholder","types","flyTo","minLength","limit","language","localGeocoder","geocoder","searchInput","query","ngOnChanges","changes","isFirstChange","setProximity","currentValue","lastResultId","Output","GeolocateControlDirective","positionOptions","fitBoundsOptions","trackUserLocation","showUserLocation","GeolocateControl","NavigationControlDirective","showCompass","showZoom","NavigationControl","ScaleControlDirective","unit","setUnit","maxWidth","ScaleControl","MarkerComponent","setDraggable","ngAfterViewInit","togglePopup","updateCoordinates","coordinates","encapsulation","ViewEncapsulation","None","GeoJSONSourceComponent","updateFeatureData","Subject","sub","sourceAdded","featureIdCounter","features","init","fromEvent","maxzoom","minzoom","buffer","tolerance","cluster","clusterRadius","clusterMaxZoom","setData","addFeature","removeFeature","collection","index","indexOf","splice","getNewFeatureId","debounceTime","FeatureComponent","geometry","properties","forwardRef","DraggableDirective","destroyed$","ReplaySubject","enter$","leave$","updateCoords","console","warn","markerElement","children","bind","handleDraggable","moving","inside","mouseUp$","dragStart$","takeUntil","filterFeature","tap","switchMap","dragging$","dragEnd$","take","lng","lat","point","layers","ImageComponent","loaded","isAdded","isAdding","startWith","hasImage","_a","error_1","LayerComponent","layerAdded","mapTo","getLayer","metadata","source-layer","sourceLayer","MapComponent","defineProperty","mapContainer","hash","interactive","bearingSnap","pitchWithRotate","classes","attributionControl","logoPosition","failIfMajorPerformanceCaveat","preserveDrawingBuffer","refreshExpiredTiles","trackResize","renderWorldCopies","maxTileCacheSize","localIdeographFontFamily","transformRequest","cursorStyle","toPromise","centerWithPanTo","panToOptions","providers","PointDirective","ClusterPointDirective","MarkerClusterComponent","ChangeDetectorRef","getLeavesFn","supercluster","getChildrenFn","getClusterExpansionZoomFn","radius","extent","nodeSize","log","reduce","initial","map","updateCluster","merge","currentZoom","Math","round","clusterPoints","getClusters","markForCheck","preserveWhitespaces","ContentChild","read","TemplateRef","PopupComponent","newlngLat","popupInstanceTmp","isOpen","previousMarker","previousValue","addPopup","closeButton","closeOnClick","CanvasSourceComponent","animate","ImageSourceComponent","RasterSourceComponent","tiles","tileSize","VectorSourceComponent","VideoSourceComponent","urls","NgxMapboxGLModule","withConfig","config","ngModule","provide","useValue","geocoderAccessToken","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { EventEmitter, Inject, Injectable, InjectionToken, NgZone, Optional } from '@angular/core';\nimport bbox from '@turf/bbox';\nimport { polygon } from '@turf/helpers';\nimport * as MapboxGl from 'mapbox-gl';\nimport { AsyncSubject, Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { BBox } from 'supercluster';\nimport { MapEvent, MapImageData, MapImageOptions } from './map.types';\n\nexport const MAPBOX_API_KEY = new InjectionToken('MapboxApiKey');\n\nexport abstract class MglResizeEventEmitter {\n  abstract resizeEvent: Observable<void>;\n}\n\nexport interface SetupMap {\n  accessToken?: string;\n  customMapboxApiUrl?: string;\n  mapOptions: any; // MapboxGl.MapboxOptions\n  mapEvents: MapEvent;\n}\n\nexport interface SetupLayer {\n  layerOptions: MapboxGl.Layer;\n  layerEvents: {\n    click: EventEmitter<MapboxGl.MapMouseEvent>;\n    mouseEnter: EventEmitter<MapboxGl.MapMouseEvent>;\n    mouseLeave: EventEmitter<MapboxGl.MapMouseEvent>;\n    mouseMove: EventEmitter<MapboxGl.MapMouseEvent>;\n  };\n}\n\nexport interface SetupPopup {\n  popupOptions: MapboxGl.PopupOptions;\n  popupEvents: {\n    open: EventEmitter<void>;\n    close: EventEmitter<void>;\n  };\n}\n\nexport interface SetupMarker {\n  markersOptions: {\n    offset?: MapboxGl.PointLike;\n    anchor?: MapboxGl.Anchor;\n    draggable?: boolean;\n    element: HTMLElement;\n    feature?: GeoJSON.Feature<GeoJSON.Point>;\n    lngLat?: MapboxGl.LngLatLike;\n  };\n  markersEvents: {\n    dragStart: EventEmitter<MapboxGl.Marker>;\n    drag: EventEmitter<MapboxGl.Marker>;\n    dragEnd: EventEmitter<MapboxGl.Marker>;\n  };\n}\n\nexport type AllSource = MapboxGl.VectorSource |\n  MapboxGl.RasterSource |\n  MapboxGl.GeoJSONSource |\n  MapboxGl.ImageSourceOptions |\n  MapboxGl.VideoSourceOptions |\n  MapboxGl.GeoJSONSourceRaw |\n  MapboxGl.CanvasSourceOptions;\n\nexport type MovingOptions = MapboxGl.FlyToOptions |\n  (MapboxGl.AnimationOptions & MapboxGl.CameraOptions) |\n  MapboxGl.CameraOptions;\n\n@Injectable()\nexport class MapService {\n  mapInstance: MapboxGl.Map;\n  mapCreated$: Observable<void>;\n  mapLoaded$: Observable<void>;\n  mapEvents: MapEvent;\n\n  private mapCreated = new AsyncSubject<void>();\n  private mapLoaded = new AsyncSubject<void>();\n  private layerIdsToRemove: string[] = [];\n  private sourceIdsToRemove: string[] = [];\n  private markersToRemove: MapboxGl.Marker[] = [];\n  private popupsToRemove: MapboxGl.Popup[] = [];\n  private imageIdsToRemove: string[] = [];\n  private subscription = new Subscription();\n\n  constructor(\n    private zone: NgZone,\n    @Optional() @Inject(MAPBOX_API_KEY) private readonly MAPBOX_API_KEY: string,\n    @Optional() private readonly MglResizeEventEmitter: MglResizeEventEmitter\n  ) {\n    this.mapCreated$ = this.mapCreated.asObservable();\n    this.mapLoaded$ = this.mapLoaded.asObservable();\n  }\n\n  setup(options: SetupMap) {\n    // Need onStable to wait for a potential @angular/route transition to end\n    this.zone.onStable.pipe(first()).subscribe(() => {\n      // Workaround rollup issue\n      this.assign(MapboxGl, 'accessToken', options.accessToken || this.MAPBOX_API_KEY);\n      if (options.customMapboxApiUrl) {\n        this.assign(MapboxGl, 'config.API_URL', options.customMapboxApiUrl);\n      }\n      this.createMap(options.mapOptions);\n      this.hookEvents(options.mapEvents);\n      this.mapEvents = options.mapEvents;\n      this.mapCreated.next(undefined);\n      this.mapCreated.complete();\n    });\n  }\n\n  destroyMap() {\n    this.subscription.unsubscribe();\n    this.mapInstance.remove();\n  }\n\n  updateMinZoom(minZoom: number) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setMinZoom(minZoom);\n    });\n  }\n\n  updateMaxZoom(maxZoom: number) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setMaxZoom(maxZoom);\n    });\n  }\n\n  updateScrollZoom(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.scrollZoom.enable() : this.mapInstance.scrollZoom.disable();\n    });\n  }\n\n  updateDragRotate(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.dragRotate.enable() : this.mapInstance.dragRotate.disable();\n    });\n  }\n\n  updateTouchZoomRotate(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.touchZoomRotate.enable() : this.mapInstance.touchZoomRotate.disable();\n    });\n  }\n\n  updateDoubleClickZoom(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.doubleClickZoom.enable() : this.mapInstance.doubleClickZoom.disable();\n    });\n  }\n\n  updateKeyboard(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.keyboard.enable() : this.mapInstance.keyboard.disable();\n    });\n  }\n\n  updateDragPan(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.dragPan.enable() : this.mapInstance.dragPan.disable();\n    });\n  }\n\n  updateBoxZoom(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.boxZoom.enable() : this.mapInstance.boxZoom.disable();\n    });\n  }\n\n  updateStyle(style: MapboxGl.Style) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setStyle(style);\n    });\n  }\n\n  updateMaxBounds(maxBounds: MapboxGl.LngLatBoundsLike) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setMaxBounds(maxBounds);\n    });\n  }\n\n  changeCanvasCursor(cursor: string) {\n    const canvas = this.mapInstance.getCanvasContainer();\n    canvas.style.cursor = cursor;\n  }\n\n  queryRenderedFeatures(\n    pointOrBox?: MapboxGl.PointLike | [MapboxGl.PointLike, MapboxGl.PointLike],\n    parameters?: { layers?: string[], filter?: any[] }\n  ): GeoJSON.Feature<GeoJSON.GeometryObject>[] {\n    return this.mapInstance.queryRenderedFeatures(pointOrBox, parameters);\n  }\n\n  panTo(center: MapboxGl.LngLatLike, options?: MapboxGl.AnimationOptions) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.panTo(center, options);\n    });\n  }\n\n  move(\n    movingMethod: 'jumpTo' | 'easeTo' | 'flyTo',\n    movingOptions?: MovingOptions,\n    zoom?: number,\n    center?: MapboxGl.LngLatLike,\n    bearing?: number,\n    pitch?: number\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      (<any>this.mapInstance[movingMethod])({\n        ...movingOptions,\n        zoom: zoom ? zoom : this.mapInstance.getZoom(),\n        center: center ? center : this.mapInstance.getCenter(),\n        bearing: bearing ? bearing : this.mapInstance.getBearing(),\n        pitch: pitch ? pitch : this.mapInstance.getPitch()\n      });\n    });\n  }\n\n  addLayer(layer: SetupLayer, bindEvents: boolean, before?: string) {\n    this.zone.runOutsideAngular(() => {\n      Object.keys(layer.layerOptions)\n        .forEach((key: string) => {\n          const tkey = <keyof MapboxGl.Layer>key;\n          if (layer.layerOptions[tkey] === undefined) {\n            delete layer.layerOptions[tkey];\n          }\n        });\n      this.mapInstance.addLayer(layer.layerOptions, before);\n      if (bindEvents) {\n        if (layer.layerEvents.click.observers.length) {\n          this.mapInstance.on('click', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n            this.zone.run(() => {\n              layer.layerEvents.click.emit(evt);\n            });\n          });\n        }\n        if (layer.layerEvents.mouseEnter.observers.length) {\n          this.mapInstance.on('mouseenter', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n            this.zone.run(() => {\n              layer.layerEvents.mouseEnter.emit(evt);\n            });\n          });\n        }\n        if (layer.layerEvents.mouseLeave.observers.length) {\n          this.mapInstance.on('mouseleave', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n            this.zone.run(() => {\n              layer.layerEvents.mouseLeave.emit(evt);\n            });\n          });\n        }\n        if (layer.layerEvents.mouseMove.observers.length) {\n          this.mapInstance.on('mousemove', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n            this.zone.run(() => {\n              layer.layerEvents.mouseMove.emit(evt);\n            });\n          });\n        }\n      }\n    });\n  }\n\n  removeLayer(layerId: string) {\n    this.layerIdsToRemove.push(layerId);\n  }\n\n  addMarker(marker: SetupMarker) {\n    const options: MapboxGl.MarkerOptions = {\n      offset: marker.markersOptions.offset,\n      anchor: marker.markersOptions.anchor,\n      draggable: !!marker.markersOptions.draggable\n    };\n    if (marker.markersOptions.element.childNodes.length > 0) {\n      options.element = marker.markersOptions.element;\n    }\n    const markerInstance = new MapboxGl.Marker(options);\n    if (marker.markersEvents.dragStart.observers.length) {\n      markerInstance.on('dragstart', (event: { target: MapboxGl.Marker }) =>\n        this.zone.run(() => marker.markersEvents.dragStart.emit(event.target))\n      );\n    }\n    if (marker.markersEvents.drag.observers.length) {\n      markerInstance.on('drag', (event: { target: MapboxGl.Marker }) =>\n        this.zone.run(() => marker.markersEvents.drag.emit(event.target))\n      );\n    }\n    if (marker.markersEvents.dragEnd.observers.length) {\n      markerInstance.on('dragend', (event: { target: MapboxGl.Marker }) =>\n        this.zone.run(() => marker.markersEvents.dragEnd.emit(event.target))\n      );\n    }\n    const lngLat: MapboxGl.LngLatLike = marker.markersOptions.feature ?\n      <[number, number]>marker.markersOptions.feature.geometry!.coordinates :\n      marker.markersOptions.lngLat!;\n    markerInstance.setLngLat(lngLat);\n    return this.zone.runOutsideAngular(() => {\n      markerInstance.addTo(this.mapInstance);\n      return markerInstance;\n    });\n  }\n\n  removeMarker(marker: MapboxGl.Marker) {\n    this.markersToRemove.push(marker);\n  }\n\n  createPopup(popup: SetupPopup, element: Node) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(popup.popupOptions)\n        .forEach((key) =>\n          (<any>popup.popupOptions)[key] === undefined && delete (<any>popup.popupOptions)[key]);\n      const popupInstance = new MapboxGl.Popup(popup.popupOptions);\n      popupInstance.setDOMContent(element);\n      if (popup.popupEvents.close.observers.length) {\n        popupInstance.on('close', () => {\n          this.zone.run(() => {\n            popup.popupEvents.close.emit();\n          });\n        });\n      }\n      if (popup.popupEvents.open.observers.length) {\n        popupInstance.on('open', () => {\n          this.zone.run(() => {\n            popup.popupEvents.open.emit();\n          });\n        });\n      }\n      return popupInstance;\n    });\n  }\n\n  addPopupToMap(popup: MapboxGl.Popup, lngLat: MapboxGl.LngLatLike, skipOpenEvent = false) {\n    return this.zone.runOutsideAngular(() => {\n      if (skipOpenEvent && (<any>popup)._listeners) {\n        delete (<any>popup)._listeners['open'];\n      }\n      popup.setLngLat(lngLat);\n      popup.addTo(this.mapInstance);\n    });\n  }\n\n  addPopupToMarker(marker: MapboxGl.Marker, popup: MapboxGl.Popup) {\n    return this.zone.runOutsideAngular(() => {\n      marker.setPopup(popup);\n    });\n  }\n\n  removePopupFromMap(popup: MapboxGl.Popup, skipCloseEvent = false) {\n    if (skipCloseEvent && (<any>popup)._listeners) {\n      delete (<any>popup)._listeners['close'];\n    }\n    this.popupsToRemove.push(popup);\n  }\n\n  removePopupFromMarker(marker: MapboxGl.Marker) {\n    return this.zone.runOutsideAngular(() => {\n      marker.setPopup(undefined);\n    });\n  }\n\n  addControl(control: MapboxGl.Control | MapboxGl.IControl, position?: 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left') {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.addControl(<any>control, position);\n    });\n  }\n\n  removeControl(control: MapboxGl.Control | MapboxGl.IControl) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.removeControl(<any>control);\n    });\n  }\n\n  async loadAndAddImage(imageId: string, url: string, options?: MapImageOptions) {\n    return this.zone.runOutsideAngular(() => {\n      return new Promise((resolve, reject) => {\n        this.mapInstance.loadImage(url, (error: { status: number } | null, image: ImageData) => {\n          if (error) {\n            reject(error);\n            return;\n          }\n          this.addImage(imageId, image, options);\n          resolve();\n        });\n      });\n    });\n  }\n\n  addImage(imageId: string, data: MapImageData, options?: MapImageOptions) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.addImage(imageId, <any>data, options);\n    });\n  }\n\n  removeImage(imageId: string) {\n    this.imageIdsToRemove.push(imageId);\n  }\n\n  addSource(sourceId: string, source: AllSource) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(source)\n        .forEach((key) =>\n          (<any>source)[key] === undefined && delete (<any>source)[key]);\n      this.mapInstance.addSource(sourceId, <any>source); // Typings issue\n    });\n  }\n\n  getSource<T>(sourceId: string) {\n    return <T><any>this.mapInstance.getSource(sourceId);\n  }\n\n  removeSource(sourceId: string) {\n    this.sourceIdsToRemove.push(sourceId);\n  }\n\n  setAllLayerPaintProperty(\n    layerId: string,\n    paint: MapboxGl.BackgroundPaint |\n      MapboxGl.FillPaint |\n      MapboxGl.FillExtrusionPaint |\n      MapboxGl.LinePaint |\n      MapboxGl.SymbolPaint |\n      MapboxGl.RasterPaint |\n      MapboxGl.CirclePaint\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(paint).forEach((key) => {\n        // TODO Check for perf, setPaintProperty only on changed paint props maybe\n        this.mapInstance.setPaintProperty(layerId, key, (<any>paint)[key]);\n      });\n    });\n  }\n\n  setAllLayerLayoutProperty(\n    layerId: string,\n    layout: MapboxGl.BackgroundLayout |\n      MapboxGl.FillLayout |\n      MapboxGl.FillExtrusionLayout |\n      MapboxGl.LineLayout |\n      MapboxGl.SymbolLayout |\n      MapboxGl.RasterLayout |\n      MapboxGl.CircleLayout\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(layout).forEach((key) => {\n        // TODO Check for perf, setPaintProperty only on changed paint props maybe\n        this.mapInstance.setLayoutProperty(layerId, key, (<any>layout)[key]);\n      });\n    });\n  }\n\n  setLayerFilter(layerId: string, filter: any[]) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setFilter(layerId, filter);\n    });\n  }\n\n  setLayerBefore(layerId: string, beforeId: string) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.moveLayer(layerId, beforeId);\n    });\n  }\n\n  setLayerZoomRange(layerId: string, minZoom?: number, maxZoom?: number) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setLayerZoomRange(layerId, minZoom ? minZoom : 0, maxZoom ? maxZoom : 20);\n    });\n  }\n\n  fitBounds(bounds: MapboxGl.LngLatBoundsLike, options?: MapboxGl.FitBoundsOptions) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.fitBounds(bounds, options);\n    });\n  }\n\n  fitScreenCoordinates(\n    points: [MapboxGl.PointLike, MapboxGl.PointLike],\n    bearing: number,\n    options?: MapboxGl.AnimationOptions & MapboxGl.CameraOptions\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.fitScreenCoordinates(points[0], points[1], bearing, options);\n    });\n  }\n\n  getCurrentViewportBbox(): BBox {\n    const canvas = this.mapInstance.getCanvas();\n    const w = parseInt(canvas.style.width!, 10);\n    const h = parseInt(canvas.style.height!, 10);\n    const upLeft = this.mapInstance.unproject([0, 0]).toArray();\n    const upRight = this.mapInstance.unproject([w, 0]).toArray();\n    const downRight = this.mapInstance.unproject([w, h]).toArray();\n    const downLeft = this.mapInstance.unproject([0, h]).toArray();\n    return <any>bbox(polygon([[upLeft, upRight, downRight, downLeft, upLeft]]));\n  }\n\n  applyChanges() {\n    this.zone.runOutsideAngular(() => {\n      this.removeLayers();\n      this.removeSources();\n      this.removeMarkers();\n      this.removePopups();\n      this.removeImages();\n    });\n  }\n\n  private createMap(options: MapboxGl.MapboxOptions) {\n    NgZone.assertNotInAngularZone();\n    Object.keys(options)\n      .forEach((key: string) => {\n        const tkey = <keyof MapboxGl.MapboxOptions>key;\n        if (options[tkey] === undefined) {\n          delete options[tkey];\n        }\n      });\n    this.mapInstance = new MapboxGl.Map(options);\n\n    const isIEorEdge = window && /msie\\s|trident\\/|edge\\//i.test(window.navigator.userAgent);\n    if (isIEorEdge) {\n      this.mapInstance.setStyle(options.style!);\n    }\n\n    const subChanges = this.zone.onMicrotaskEmpty\n      .subscribe(() => this.applyChanges());\n    if (this.MglResizeEventEmitter) {\n      const subResize = this.MglResizeEventEmitter.resizeEvent.subscribe(() => {\n        this.mapInstance.resize();\n      });\n      this.subscription.add(subResize);\n    }\n    this.subscription.add(subChanges);\n  }\n\n  private removeLayers() {\n    for (const layerId of this.layerIdsToRemove) {\n      this.mapInstance.removeLayer(layerId);\n    }\n    this.layerIdsToRemove = [];\n  }\n\n  private removeSources() {\n    for (const sourceId of this.sourceIdsToRemove) {\n      this.mapInstance.removeSource(sourceId);\n    }\n    this.sourceIdsToRemove = [];\n  }\n\n  private removeMarkers() {\n    for (const marker of this.markersToRemove) {\n      marker.remove();\n    }\n    this.markersToRemove = [];\n  }\n\n  private removePopups() {\n    for (const popup of this.popupsToRemove) {\n      popup.remove();\n    }\n    this.popupsToRemove = [];\n  }\n\n  private removeImages() {\n    for (const imageId of this.imageIdsToRemove) {\n      this.mapInstance.removeImage(imageId);\n    }\n    this.imageIdsToRemove = [];\n  }\n\n  private hookEvents(events: MapEvent) {\n    this.mapInstance.on('load', () => {\n      this.mapLoaded.next(undefined);\n      this.mapLoaded.complete();\n      this.zone.run(() => events.load.emit(this.mapInstance));\n    });\n    if (events.resize.observers.length) {\n      this.mapInstance.on('resize', () => this.zone.run(() => events.resize.emit()));\n    }\n    if (events.remove.observers.length) {\n      this.mapInstance.on('remove', () => this.zone.run(() => events.remove.emit()));\n    }\n    if (events.mouseDown.observers.length) {\n      this.mapInstance.on('mousedown', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseDown.emit(evt)));\n    }\n    if (events.mouseUp.observers.length) {\n      this.mapInstance.on('mouseup', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseUp.emit(evt)));\n    }\n    if (events.mouseMove.observers.length) {\n      this.mapInstance.on('mousemove', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseMove.emit(evt)));\n    }\n    if (events.click.observers.length) {\n      this.mapInstance.on('click', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.click.emit(evt)));\n    }\n    if (events.dblClick.observers.length) {\n      this.mapInstance.on('dblclick', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.dblClick.emit(evt)));\n    }\n    if (events.mouseEnter.observers.length) {\n      this.mapInstance.on('mouseenter', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseEnter.emit(evt)));\n    }\n    if (events.mouseLeave.observers.length) {\n      this.mapInstance.on('mouseleave', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseLeave.emit(evt)));\n    }\n    if (events.mouseOver.observers.length) {\n      this.mapInstance.on('mouseover', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseOver.emit(evt)));\n    }\n    if (events.mouseOut.observers.length) {\n      this.mapInstance.on('mouseout', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseOut.emit(evt)));\n    }\n    if (events.contextMenu.observers.length) {\n      this.mapInstance.on('contextmenu', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.contextMenu.emit(evt)));\n    }\n    if (events.touchStart.observers.length) {\n      this.mapInstance.on('touchstart', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchStart.emit(evt)));\n    }\n    if (events.touchEnd.observers.length) {\n      this.mapInstance.on('touchend', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchEnd.emit(evt)));\n    }\n    if (events.touchMove.observers.length) {\n      this.mapInstance.on('touchmove', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchMove.emit(evt)));\n    }\n    if (events.touchCancel.observers.length) {\n      this.mapInstance.on('touchcancel', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchCancel.emit(evt)));\n    }\n    if (events.wheel.observers.length) {\n      // MapboxGl.MapWheelEvent\n      this.mapInstance.on('wheel', (evt: any) => this.zone.run(() => events.wheel.emit(evt)));\n    }\n    if (events.moveStart.observers.length) {\n      this.mapInstance.on('movestart', (evt: DragEvent) => this.zone.run(() => events.moveStart.emit(evt)));\n    }\n    if (events.move.observers.length) {\n      this.mapInstance.on('move', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.move.emit(evt)));\n    }\n    if (events.moveEnd.observers.length) {\n      this.mapInstance.on('moveend', (evt: DragEvent) => this.zone.run(() => events.moveEnd.emit(evt)));\n    }\n    if (events.dragStart.observers.length) {\n      this.mapInstance.on('dragstart', (evt: DragEvent) => this.zone.run(() => events.dragStart.emit(evt)));\n    }\n    if (events.drag.observers.length) {\n      this.mapInstance.on('drag', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.drag.emit(evt)));\n    }\n    if (events.dragEnd.observers.length) {\n      this.mapInstance.on('dragend', (evt: DragEvent) => this.zone.run(() => events.dragEnd.emit(evt)));\n    }\n    if (events.zoomStart.observers.length) {\n      this.mapInstance.on('zoomstart', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() =>\n        events.zoomStart.emit(evt)));\n    }\n    if (events.zoomEvt.observers.length) {\n      this.mapInstance.on('zoom', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.zoomEvt.emit(evt)));\n    }\n    if (events.zoomEnd.observers.length) {\n      this.mapInstance.on('zoomend', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() =>\n        events.zoomEnd.emit(evt)));\n    }\n    if (events.rotateStart.observers.length) {\n      this.mapInstance.on('rotatestart', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() =>\n        events.rotateStart.emit(evt)));\n    }\n    if (events.rotate.observers.length) {\n      this.mapInstance.on('rotate', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.rotate.emit(evt)));\n    }\n    if (events.rotateEnd.observers.length) {\n      this.mapInstance.on('rotateend', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() =>\n        events.rotateEnd.emit(evt)));\n    }\n    if (events.pitchStart.observers.length) {\n      this.mapInstance.on('pitchstart', (evt: MapboxGl.EventData) => this.zone.run(() => events.pitchStart.emit(evt)));\n    }\n    if (events.pitchEvt.observers.length) {\n      this.mapInstance.on('pitch', (evt: MapboxGl.EventData) => this.zone.run(() => events.pitchEvt.emit(evt)));\n    }\n    if (events.pitchEnd.observers.length) {\n      this.mapInstance.on('pitchend', (evt: MapboxGl.EventData) => this.zone.run(() => events.pitchEnd.emit(evt)));\n    }\n    if (events.boxZoomStart.observers.length) {\n      this.mapInstance.on('boxzoomstart', (evt: MapboxGl.MapBoxZoomEvent) => this.zone.run(() => events.boxZoomStart.emit(evt)));\n    }\n    if (events.boxZoomEnd.observers.length) {\n      this.mapInstance.on('boxzoomend', (evt: MapboxGl.MapBoxZoomEvent) => this.zone.run(() => events.boxZoomEnd.emit(evt)));\n    }\n    if (events.boxZoomCancel.observers.length) {\n      this.mapInstance.on('boxzoomcancel', (evt: MapboxGl.MapBoxZoomEvent) => this.zone.run(() => events.boxZoomCancel.emit(evt)));\n    }\n    if (events.webGlContextLost.observers.length) {\n      this.mapInstance.on('webglcontextlost', () => this.zone.run(() => events.webGlContextLost.emit()));\n    }\n    if (events.webGlContextRestored.observers.length) {\n      this.mapInstance.on('webglcontextrestored', () => this.zone.run(() => events.webGlContextRestored.emit()));\n    }\n    if (events.render.observers.length) {\n      this.mapInstance.on('render', () => this.zone.run(() => events.render.emit()));\n    }\n    if (events.error.observers.length) {\n      this.mapInstance.on('error', () => this.zone.run(() => events.error.emit()));\n    }\n    if (events.data.observers.length) {\n      this.mapInstance.on('data', (evt: MapboxGl.EventData) => this.zone.run(() => events.data.emit(evt)));\n    }\n    if (events.styleData.observers.length) {\n      this.mapInstance.on('styledata', (evt: MapboxGl.EventData) => this.zone.run(() => events.styleData.emit(evt)));\n    }\n    if (events.sourceData.observers.length) {\n      this.mapInstance.on('sourcedata', (evt: MapboxGl.EventData) => this.zone.run(() => events.sourceData.emit(evt)));\n    }\n    if (events.dataLoading.observers.length) {\n      this.mapInstance.on('dataloading', (evt: MapboxGl.EventData) => this.zone.run(() => events.dataLoading.emit(evt)));\n    }\n    if (events.styleDataLoading.observers.length) {\n      this.mapInstance.on('styledataloading', (evt: MapboxGl.EventData) => this.zone.run(() => events.styleDataLoading.emit(evt)));\n    }\n    if (events.sourceDataLoading.observers.length) {\n      this.mapInstance.on('sourcedataloading', (evt: MapboxGl.EventData) => this.zone.run(() => events.sourceDataLoading.emit(evt)));\n    }\n    if (events.idle.observers.length) {\n      this.mapInstance.on('idle', () => this.zone.run(() => events.idle.emit()));\n    }\n  }\n\n  // TODO move this elsewhere\n  private assign(obj: any, prop: any, value: any) {\n    if (typeof prop === 'string') {\n      // tslint:disable-next-line:no-parameter-reassignment\n      prop = prop.split('.');\n    }\n    if (prop.length > 1) {\n      const e = prop.shift();\n      this.assign(obj[e] =\n        Object.prototype.toString.call(obj[e]) === '[object Object]'\n          ? obj[e]\n          : {},\n        prop,\n        value);\n    } else {\n      obj[prop[0]] = value;\n    }\n  }\n}\n","import { Control, IControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\n\nexport class CustomControl implements IControl {\n  constructor(\n    private container: HTMLElement\n  ) {\n  }\n\n  onAdd() {\n    return this.container;\n  }\n\n  onRemove() {\n    return this.container.parentNode!.removeChild(this.container);\n  }\n\n  getDefaultPosition() {\n    return 'top-right';\n  }\n}\n\n@Component({\n  selector: 'mgl-control',\n  template: '<div class=\"mapboxgl-ctrl\" #content><ng-content></ng-content></div>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ControlComponent implements OnDestroy, AfterContentInit {\n  /* Init inputs */\n  @Input() position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n\n  @ViewChild('content') content: ElementRef;\n\n  control: Control | IControl;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngAfterContentInit() {\n    if (this.content.nativeElement.childNodes.length) {\n      this.control = new CustomControl(this.content.nativeElement);\n      this.MapService.mapCreated$.subscribe(() => {\n        this.MapService.addControl(this.control!, this.position);\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.control) {\n      this.MapService.removeControl(this.control);\n    }\n  }\n}\n","import { Directive, Host, Input, OnInit } from '@angular/core';\nimport { AttributionControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglAttribution]'\n})\nexport class AttributionControlDirective implements OnInit {\n  /* Init inputs */\n  @Input() compact?: boolean;\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options: { compact?: boolean } = {};\n      if (this.compact !== undefined) {\n        options.compact = this.compact;\n      }\n      this.ControlComponent.control = new AttributionControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import { Directive, OnInit, Host, Input } from '@angular/core';\nimport { FullscreenControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglFullscreen]'\n})\nexport class FullscreenControlDirective implements OnInit {\n  /* Init inputs */\n  @Input() container?: HTMLElement;\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options: { container?: HTMLElement } = {};\n      if (this.container !== undefined) {\n        options.container = this.container;\n      }\n      // @ts-ignore\n      this.ControlComponent.control = new FullscreenControl(options); // @types/mapbox-gl update needed\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Host,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnChanges,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges\n  } from '@angular/core';\nimport { MapService } from '../map/map.service';\nimport { GeocoderEvent } from '../map/map.types';\nimport { ControlComponent } from './control.component';\n\nconst MapboxGeocoder = require('@mapbox/mapbox-gl-geocoder');\n\nexport const MAPBOX_GEOCODER_API_KEY = new InjectionToken('MapboxApiKey');\n\nexport interface LngLatLiteral {\n  latitude: number;\n  longitude: number;\n}\n\nexport interface Results extends GeoJSON.FeatureCollection<GeoJSON.Point> {\n  attribution: string;\n  query: string[];\n}\n\nexport interface Result extends GeoJSON.Feature<GeoJSON.Point> {\n  bbox: [number, number, number, number];\n  center: number[];\n  place_name: string;\n  place_type: string[];\n  relevance: number;\n  text: string;\n  address: string;\n  context: any[];\n}\n\n@Directive({\n  selector: '[mglGeocoder]'\n})\nexport class GeocoderControlDirective implements OnInit, OnChanges, GeocoderEvent {\n  /* Init inputs */\n  @Input() country?: string;\n  @Input() placeholder?: string;\n  @Input() zoom?: number;\n  @Input() bbox?: [number, number, number, number];\n  @Input() types?: string;\n  @Input() flyTo?: boolean;\n  @Input() minLength?: number;\n  @Input() limit?: number;\n  @Input() language?: string;\n  @Input() accessToken?: string;\n  @Input() filter?: (feature: Result) => boolean;\n  @Input() localGeocoder?: (query: string) => Result[];\n\n  /* Dynamic inputs */\n  @Input() proximity?: LngLatLiteral;\n  @Input() searchInput?: string;\n\n  @Output() clear = new EventEmitter<void>();\n  @Output() loading = new EventEmitter<{ query: string }>();\n  @Output() results = new EventEmitter<Results>();\n  @Output() result = new EventEmitter<{ result: Result }>();\n  @Output() error = new EventEmitter<any>();\n\n  geocoder: any;\n\n  private lastResultId?: string | number;\n\n  constructor(\n    private MapService: MapService,\n    private zone: NgZone,\n    @Host() private ControlComponent: ControlComponent,\n    @Optional() @Inject(MAPBOX_GEOCODER_API_KEY) private readonly MAPBOX_GEOCODER_API_KEY: string\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options = {\n        proximity: this.proximity,\n        country: this.country,\n        placeholder: this.placeholder,\n        zoom: this.zoom,\n        bbox: this.bbox,\n        types: this.types,\n        flyTo: this.flyTo,\n        minLength: this.minLength,\n        limit: this.limit,\n        language: this.language,\n        filter: this.filter,\n        localGeocoder: this.localGeocoder,\n        accessToken: this.accessToken || this.MAPBOX_GEOCODER_API_KEY\n      };\n\n      Object.keys(options).forEach((key: string) => {\n        const tkey = <keyof typeof options>key;\n        if (options[tkey] === undefined) {\n          delete options[tkey];\n        }\n      });\n      this.geocoder = new MapboxGeocoder(options);\n      this.hookEvents(this);\n      this.addControl();\n    });\n    if (this.searchInput) {\n      this.MapService.mapLoaded$.subscribe(() => {\n        this.geocoder.query(this.searchInput);\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.geocoder) {\n      return;\n    }\n    if (changes.proximity && !changes.proximity.isFirstChange()) {\n      this.geocoder.setProximity(changes.proximity.currentValue);\n    }\n    if (changes.searchInput) {\n      this.geocoder.query(this.searchInput);\n    }\n  }\n\n  private addControl() {\n    this.ControlComponent.control = this.geocoder;\n    this.MapService.addControl(\n      this.ControlComponent.control,\n      this.ControlComponent.position\n    );\n  }\n\n  private hookEvents(events: GeocoderEvent) {\n    if (events.results.observers.length) {\n      this.geocoder.on('results', (evt: Results) => this.zone.run(() => events.results.emit(evt)));\n    }\n    if (events.result.observers.length) {\n      this.geocoder.on('result', (evt: { result: Result }) => {\n        // Workaroud issue https://github.com/mapbox/mapbox-gl-geocoder/issues/99\n        if (this.lastResultId !== evt.result.id) {\n          this.lastResultId = evt.result.id;\n          this.zone.run(() => events.result.emit(evt));\n        }\n      });\n    }\n    if (events.error.observers.length) {\n      this.geocoder.on('error', (evt: any) => this.zone.run(() => events.error.emit(evt)));\n    }\n    if (events.loading.observers.length) {\n      this.geocoder.on('loading', (evt: { query: string }) => this.zone.run(() => events.loading.emit(evt)));\n    }\n    if (events.clear.observers.length) {\n      this.geocoder.on('clear', () => this.zone.run(() => events.clear.emit()));\n    }\n\n  }\n}\n","import { Directive, Host, Input, OnInit } from '@angular/core';\nimport { GeolocateControl, FitBoundsOptions } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglGeolocate]'\n})\nexport class GeolocateControlDirective implements OnInit {\n  /* Init inputs */\n  @Input() positionOptions?: PositionOptions;\n  @Input() fitBoundsOptions?: FitBoundsOptions;\n  @Input() trackUserLocation?: boolean;\n  @Input() showUserLocation?: boolean;\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options = {\n        positionOptions: this.positionOptions,\n        fitBoundsOptions: this.fitBoundsOptions,\n        trackUserLocation: this.trackUserLocation,\n        showUserLocation: this.showUserLocation\n      };\n\n      Object.keys(options)\n        .forEach((key: string) => {\n          const tkey = <keyof typeof options>key;\n          if (options[tkey] === undefined) {\n            delete options[tkey];\n          }\n        });\n      this.ControlComponent.control = new GeolocateControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import { Directive, Host, Input, OnInit } from '@angular/core';\nimport { NavigationControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglNavigation]'\n})\nexport class NavigationControlDirective implements OnInit {\n  /* Init inputs */\n  @Input() showCompass?: boolean;\n  @Input() showZoom?: boolean;\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options: { showCompass?: boolean, showZoom?: boolean } = {};\n      if (this.showCompass !== undefined) {\n        options.showCompass = this.showCompass;\n      }\n      if (this.showZoom !== undefined) {\n        options.showZoom = this.showZoom;\n      }\n      this.ControlComponent.control = new NavigationControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import { Directive, Host, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { ScaleControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglScale]'\n})\nexport class ScaleControlDirective implements OnInit, OnChanges {\n  /* Init inputs */\n  @Input() maxWidth?: number;\n\n  /* Dynamic inputs */\n  @Input() unit?: 'imperial' | 'metric' | 'nautical';\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.unit && !changes.unit.isFirstChange()) {\n      (<any>this.ControlComponent.control).setUnit(changes.unit.currentValue);\n    }\n  }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options: { maxWidth?: number, unit?: string } = {};\n      if (this.maxWidth !== undefined) {\n        options.maxWidth = this.maxWidth;\n      }\n      if (this.unit !== undefined) {\n        options.unit = this.unit;\n      }\n      this.ControlComponent.control = new ScaleControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n  EventEmitter\n} from '@angular/core';\nimport { LngLatLike, Marker, PointLike, Anchor } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-marker',\n  template: '<div #content><ng-content></ng-content></div>',\n  styles: [`\n    .mapboxgl-marker {\n      line-height: 0;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MarkerComponent implements OnChanges, OnDestroy, AfterViewInit, OnInit {\n  /* Init input */\n  @Input() offset?: PointLike;\n  @Input() anchor?: Anchor;\n\n  /* Dynamic input */\n  @Input() feature?: GeoJSON.Feature<GeoJSON.Point>;\n  @Input() lngLat?: LngLatLike;\n  @Input() draggable?: boolean;\n\n  @Output() dragStart = new EventEmitter<Marker>();\n  @Output() drag = new EventEmitter<Marker>();\n  @Output() dragEnd = new EventEmitter<Marker>();\n\n  @ViewChild('content') content: ElementRef;\n\n  markerInstance?: Marker;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    if (this.feature && this.lngLat) {\n      throw new Error('feature and lngLat input are mutually exclusive');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.lngLat && !changes.lngLat.isFirstChange()) {\n      this.markerInstance!.setLngLat(this.lngLat!);\n    }\n    if (changes.feature && !changes.feature.isFirstChange()) {\n      this.markerInstance!.setLngLat(<[number, number]>this.feature!.geometry!.coordinates);\n    }\n    if (changes.draggable && !changes.draggable.isFirstChange()) {\n      this.markerInstance!.setDraggable(!!this.draggable);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      this.markerInstance = this.MapService.addMarker({\n        markersOptions: {\n          offset: this.offset,\n          anchor: this.anchor,\n          draggable: !!this.draggable,\n          element: this.content.nativeElement,\n          feature: this.feature,\n          lngLat: this.lngLat\n        },\n        markersEvents: {\n          dragStart: this.dragStart,\n          drag: this.drag,\n          dragEnd: this.dragEnd\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.MapService.removeMarker(this.markerInstance!);\n    this.markerInstance = undefined;\n  }\n\n  togglePopup() {\n    this.markerInstance!.togglePopup();\n  }\n\n  updateCoordinates(coordinates: number[]) {\n    this.markerInstance!.setLngLat(<[number, number]>coordinates);\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { GeoJSONSource, GeoJSONSourceOptions } from 'mapbox-gl';\nimport { fromEvent, Subject, Subscription } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\nimport { MapService } from '../../map/map.service';\n\n@Component({\n  selector: 'mgl-geojson-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GeoJSONSourceComponent implements OnInit, OnDestroy, OnChanges, GeoJSONSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() data?: GeoJSON.Feature<GeoJSON.Geometry> | GeoJSON.FeatureCollection<GeoJSON.Geometry> | string;\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n  @Input() buffer?: number;\n  @Input() tolerance?: number;\n  @Input() cluster?: boolean;\n  @Input() clusterRadius?: number;\n  @Input() clusterMaxZoom?: number;\n\n  updateFeatureData = new Subject();\n\n  private sub = new Subscription();\n  private sourceAdded = false;\n  private featureIdCounter = 0;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    if (!this.data) {\n      this.data = {\n        type: 'FeatureCollection',\n        features: []\n      };\n    }\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(<any>this.MapService.mapInstance, 'styledata').pipe(\n        filter(() => !this.MapService.mapInstance.getSource(this.id))\n      ).subscribe(() => {\n        this.init();\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.maxzoom && !changes.maxzoom.isFirstChange() ||\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.buffer && !changes.buffer.isFirstChange() ||\n      changes.tolerance && !changes.tolerance.isFirstChange() ||\n      changes.cluster && !changes.cluster.isFirstChange() ||\n      changes.clusterRadius && !changes.clusterRadius.isFirstChange() ||\n      changes.clusterMaxZoom && !changes.clusterMaxZoom.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n    if (changes.data && !changes.data.isFirstChange()) {\n      const source = this.MapService.getSource<GeoJSONSource>(this.id);\n      source.setData(this.data!);\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  addFeature(feature: GeoJSON.Feature<GeoJSON.GeometryObject>) {\n    const collection = <GeoJSON.FeatureCollection<GeoJSON.GeometryObject>>this.data;\n    collection.features.push(feature);\n    this.updateFeatureData.next();\n  }\n\n  removeFeature(feature: GeoJSON.Feature<GeoJSON.GeometryObject>) {\n    const collection = <GeoJSON.FeatureCollection<GeoJSON.GeometryObject>>this.data;\n    const index = collection.features.indexOf(feature);\n    if (index > -1) {\n      collection.features.splice(index, 1);\n    }\n    this.updateFeatureData.next();\n  }\n\n  getNewFeatureId() {\n    return ++this.featureIdCounter;\n  }\n\n  private init() {\n    this.MapService.addSource(this.id, {\n      type: 'geojson',\n      data: this.data,\n      maxzoom: this.maxzoom,\n      minzoom: this.minzoom,\n      buffer: this.buffer,\n      tolerance: this.tolerance,\n      cluster: this.cluster,\n      clusterRadius: this.clusterRadius,\n      clusterMaxZoom: this.clusterMaxZoom,\n    });\n    const sub = this.updateFeatureData.pipe(debounceTime(0)).subscribe(() => {\n      const source = this.MapService.getSource<GeoJSONSource>(this.id);\n      source.setData(this.data!);\n    });\n    this.sub.add(sub);\n    this.sourceAdded = true;\n  }\n}\n","import { Component, forwardRef, Inject, Input, OnDestroy, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { GeoJSONSourceComponent } from './geojson-source.component';\n\n@Component({\n  selector: 'mgl-feature',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FeatureComponent implements OnInit, OnDestroy, GeoJSON.Feature<GeoJSON.GeometryObject> {\n  /* Init inputs */\n  @Input() id?: number; // FIXME number only for now https://github.com/mapbox/mapbox-gl-js/issues/2716\n  @Input() geometry: GeoJSON.GeometryObject;\n  @Input() properties: any;\n  type: 'Feature' = 'Feature';\n\n  private feature: GeoJSON.Feature<GeoJSON.GeometryObject>;\n\n  constructor(\n    @Inject(forwardRef(() => GeoJSONSourceComponent)) private GeoJSONSourceComponent: GeoJSONSourceComponent\n  ) { }\n\n  ngOnInit() {\n    if (!this.id) {\n      this.id = this.GeoJSONSourceComponent.getNewFeatureId();\n    }\n    this.feature = {\n      type: this.type,\n      geometry: this.geometry,\n      properties: this.properties ? this.properties : {}\n    };\n    this.feature.id = this.id;\n    this.GeoJSONSourceComponent.addFeature(this.feature);\n  }\n\n  ngOnDestroy() {\n    this.GeoJSONSourceComponent.removeFeature(this.feature);\n  }\n\n  updateCoordinates(coordinates: number[]) {\n    (<GeoJSON.Point>this.feature.geometry).coordinates = coordinates;\n    this.GeoJSONSourceComponent.updateFeatureData.next();\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Host,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output\n} from '@angular/core';\nimport { MapMouseEvent } from 'mapbox-gl';\nimport { fromEvent, Observable, ReplaySubject } from 'rxjs';\nimport { filter, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport { LayerComponent } from '../layer/layer.component';\nimport { MapService } from '../map/map.service';\nimport { MarkerComponent } from '../marker/marker.component';\nimport { FeatureComponent } from '../source/geojson/feature.component';\n\n@Directive({\n  selector: '[mglDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnDestroy {\n  // tslint:disable-next-line:no-input-rename\n  @Input('mglDraggable') layer?: LayerComponent;\n\n  @Output() dragStart = new EventEmitter<MapMouseEvent>();\n  @Output() dragEnd = new EventEmitter<MapMouseEvent>();\n  @Output() drag = new EventEmitter<MapMouseEvent>();\n\n  private destroyed$: ReplaySubject<void> = new ReplaySubject(1);\n\n  constructor(\n    private MapService: MapService,\n    private NgZone: NgZone,\n    @Optional() @Host() private FeatureComponent?: FeatureComponent,\n    @Optional() @Host() private MarkerComponent?: MarkerComponent\n  ) { }\n\n  ngOnInit() {\n    let enter$;\n    let leave$;\n    let updateCoords;\n    if (this.MarkerComponent) {\n      console.warn('[ngx-mapbox-gl] mglDraggable on Marker is deprecated, use draggable input instead');\n      let markerElement = (<Element>this.MarkerComponent.content.nativeElement);\n      if (markerElement.children.length === 1) {\n        markerElement = markerElement.children[0];\n      }\n      enter$ = fromEvent(markerElement, 'mouseenter');\n      leave$ = fromEvent(markerElement, 'mouseleave');\n      updateCoords = this.MarkerComponent.updateCoordinates.bind(this.MarkerComponent);\n    } else if (this.FeatureComponent && this.layer) {\n      enter$ = this.layer.mouseEnter;\n      leave$ = this.layer.mouseLeave;\n      updateCoords = this.FeatureComponent.updateCoordinates.bind(this.FeatureComponent);\n      if (this.FeatureComponent.geometry.type !== 'Point') {\n        throw new Error('mglDraggable only support point feature');\n      }\n    } else {\n      throw new Error('mglDraggable can only be used on Feature (with a layer as input) or Marker');\n    }\n\n    this.handleDraggable(enter$, leave$, updateCoords);\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next(undefined);\n    this.destroyed$.complete();\n  }\n\n  private handleDraggable(enter$: Observable<any>, leave$: Observable<any>, updateCoords: (coord: number[]) => void) {\n    let moving = false;\n    let inside = false;\n    this.MapService.mapCreated$.subscribe(() => {\n      const mouseUp$ = fromEvent<MapMouseEvent>(<any>this.MapService.mapInstance, 'mouseup');\n      const dragStart$ = enter$.pipe(\n        takeUntil(this.destroyed$),\n        filter(() => !moving),\n        filter((evt) => this.filterFeature(evt)),\n        tap(() => {\n          inside = true;\n          this.MapService.changeCanvasCursor('move');\n          this.MapService.updateDragPan(false);\n        }),\n        switchMap(() =>\n          fromEvent<MapMouseEvent>(<any>this.MapService.mapInstance, 'mousedown')\n            .pipe(takeUntil(leave$))\n        )\n      );\n      const dragging$ = dragStart$.pipe(\n        switchMap(() => fromEvent<MapMouseEvent>(<any>this.MapService.mapInstance, 'mousemove')\n          .pipe(takeUntil(mouseUp$))\n        )\n      );\n      const dragEnd$ = dragStart$.pipe(\n        switchMap(() => mouseUp$.pipe(take(1)))\n      );\n      dragStart$.subscribe((evt) => {\n        moving = true;\n        if (this.dragStart.observers.length) {\n          this.NgZone.run(() => this.dragStart.emit(evt));\n        }\n      });\n      dragging$.subscribe((evt) => {\n        updateCoords([evt.lngLat.lng, evt.lngLat.lat]);\n        if (this.drag.observers.length) {\n          this.NgZone.run(() => this.drag.emit(evt));\n        }\n      });\n      dragEnd$.subscribe((evt) => {\n        moving = false;\n        if (this.dragEnd.observers.length) {\n          this.NgZone.run(() => this.dragEnd.emit(evt));\n        }\n        if (!inside) { // It's possible to dragEnd outside the target (small input lag)\n          this.MapService.changeCanvasCursor('');\n          this.MapService.updateDragPan(true);\n        }\n      });\n      leave$.pipe(\n        takeUntil(this.destroyed$),\n        tap(() => inside = false),\n        filter(() => !moving)\n      ).subscribe(() => {\n        this.MapService.changeCanvasCursor('');\n        this.MapService.updateDragPan(true);\n      });\n    });\n  }\n\n  private filterFeature(evt: MapMouseEvent) {\n    if (this.FeatureComponent && this.layer) {\n      const feature: GeoJSON.Feature<any> = this.MapService.queryRenderedFeatures(\n        evt.point,\n        {\n          layers: [this.layer.id],\n          filter: [\n            'all',\n            ['==', '$type', 'Point'],\n            ['==', '$id', this.FeatureComponent.id]\n          ]\n        }\n      )[0];\n      if (!feature) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter, startWith, switchMap } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\nimport { MapImageData, MapImageOptions } from '../map/map.types';\n\n@Component({\n  selector: 'mgl-image',\n  template: ''\n})\nexport class ImageComponent implements OnInit, OnDestroy, OnChanges {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() data?: MapImageData;\n  @Input() options?: MapImageOptions;\n  @Input() url?: string;\n\n  @Output() error = new EventEmitter<{ status: number }>();\n  @Output() loaded = new EventEmitter<void>();\n\n  private isAdded = false;\n  private isAdding = false;\n  private sub: Subscription;\n\n  constructor(\n    private MapService: MapService,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    this.sub = this.MapService.mapLoaded$.pipe(\n      switchMap(() => fromEvent(<any>this.MapService.mapInstance, 'styledata').pipe(\n        startWith(undefined),\n        filter(() => !this.isAdding && !this.MapService.mapInstance.hasImage(this.id))\n      )),\n    ).subscribe(() => this.init());\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes.data && !changes.data.isFirstChange() ||\n      changes.options && !changes.options.isFirstChange() ||\n      changes.url && !changes.url.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.isAdded) {\n      this.MapService.removeImage(this.id);\n    }\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  private async init() {\n    this.isAdding = true;\n    if (this.data) {\n      this.MapService.addImage(\n        this.id,\n        this.data,\n        this.options\n      );\n      this.isAdded = true;\n      this.isAdding = false;\n    } else if (this.url) {\n      try {\n        await this.MapService.loadAndAddImage(\n          this.id,\n          this.url,\n          this.options\n        );\n        this.isAdded = true;\n        this.isAdding = false;\n        this.zone.run(() => {\n          this.loaded.emit();\n        });\n      } catch (error) {\n        this.zone.run(() => {\n          this.error.emit(error);\n        });\n      }\n    }\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  BackgroundLayout,\n  BackgroundPaint,\n  CircleLayout,\n  CirclePaint,\n  FillExtrusionLayout,\n  FillExtrusionPaint,\n  FillLayout,\n  FillPaint,\n  GeoJSONSource,\n  GeoJSONSourceRaw,\n  ImageSource,\n  Layer,\n  LineLayout,\n  LinePaint,\n  RasterLayout,\n  RasterPaint,\n  RasterSource,\n  SymbolLayout,\n  SymbolPaint,\n  VectorSource,\n  VideoSource,\n  MapLayerMouseEvent\n} from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter, mapTo, switchMap, startWith } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-layer',\n  template: ''\n})\nexport class LayerComponent implements OnInit, OnDestroy, OnChanges, Layer {\n  /* Init inputs */\n  @Input() id: string;\n  @Input() source?: string | VectorSource | RasterSource | GeoJSONSource | ImageSource | VideoSource | GeoJSONSourceRaw;\n  @Input() type: 'symbol' | 'fill' | 'line' | 'circle' | 'fill-extrusion' | 'raster' | 'background';\n  @Input() metadata?: any;\n  @Input() sourceLayer?: string;\n\n  /* Dynamic inputs */\n  @Input() filter?: any[];\n  @Input() layout?: BackgroundLayout | FillLayout | FillExtrusionLayout | LineLayout | SymbolLayout | RasterLayout | CircleLayout;\n  @Input() paint?: BackgroundPaint | FillPaint | FillExtrusionPaint | LinePaint | SymbolPaint | RasterPaint | CirclePaint;\n  @Input() before?: string;\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n\n  @Output() click = new EventEmitter<MapLayerMouseEvent>();\n  @Output() mouseEnter = new EventEmitter<MapLayerMouseEvent>();\n  @Output() mouseLeave = new EventEmitter<MapLayerMouseEvent>();\n  @Output() mouseMove = new EventEmitter<MapLayerMouseEvent>();\n\n  private layerAdded = false;\n  private sub: Subscription;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.sub = this.MapService.mapLoaded$.pipe(\n      switchMap(() => fromEvent(<any>this.MapService.mapInstance, 'styledata').pipe(\n        mapTo(false),\n        filter(() => !this.MapService.mapInstance.getLayer(this.id)),\n        startWith(true)\n      )),\n    ).subscribe((bindEvents: boolean) => this.init(bindEvents));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.layerAdded) {\n      return;\n    }\n    if (changes.paint && !changes.paint.isFirstChange()) {\n      this.MapService.setAllLayerPaintProperty(this.id, changes.paint.currentValue!);\n    }\n    if (changes.layout && !changes.layout.isFirstChange()) {\n      this.MapService.setAllLayerLayoutProperty(this.id, changes.layout.currentValue!);\n    }\n    if (changes.filter && !changes.filter.isFirstChange()) {\n      this.MapService.setLayerFilter(this.id, changes.filter.currentValue!);\n    }\n    if (changes.before && !changes.before.isFirstChange()) {\n      this.MapService.setLayerBefore(this.id, changes.before.currentValue!);\n    }\n    if (\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.maxzoom && !changes.maxzoom.isFirstChange()\n    ) {\n      this.MapService.setLayerZoomRange(this.id, this.minzoom, this.maxzoom);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.layerAdded) {\n      this.MapService.removeLayer(this.id);\n    }\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  private init(bindEvents: boolean) {\n    const layer = {\n      layerOptions: {\n        id: this.id,\n        type: this.type,\n        source: this.source,\n        metadata: this.metadata,\n        'source-layer': this.sourceLayer,\n        minzoom: this.minzoom,\n        maxzoom: this.maxzoom,\n        filter: this.filter,\n        layout: this.layout,\n        paint: this.paint\n      },\n      layerEvents: {\n        click: this.click,\n        mouseEnter: this.mouseEnter,\n        mouseLeave: this.mouseLeave,\n        mouseMove: this.mouseMove\n      }\n    };\n    this.MapService.addLayer(layer, bindEvents, this.before);\n    this.layerAdded = true;\n  }\n}\n","import {\n  AnimationOptions,\n  EventData,\n  FitBoundsOptions,\n  LngLatBoundsLike,\n  LngLatLike,\n  Map,\n  MapBoxZoomEvent,\n  MapMouseEvent,\n  MapTouchEvent,\n  PointLike,\n  Style\n} from 'mapbox-gl';\nimport { MapService, MovingOptions } from './map.service';\nimport { MapEvent } from './map.types';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\n\n@Component({\n  selector: 'mgl-map',\n  template: '<div #container></div>',\n  styles: [`\n  :host {\n    display: block;\n  }\n  div {\n    height: 100%;\n    width: 100%;\n  }\n  `],\n  providers: [\n    MapService\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MapComponent implements OnChanges, OnDestroy, AfterViewInit, MapEvent {\n  /* Init inputs */\n  @Input() accessToken?: string;\n  @Input() customMapboxApiUrl?: string;\n  @Input() hash?: boolean;\n  @Input() refreshExpiredTiles?: boolean;\n  @Input() failIfMajorPerformanceCaveat?: boolean;\n  @Input() classes?: string[];\n  @Input() bearingSnap?: number;\n  @Input() interactive?: boolean;\n  @Input() pitchWithRotate?: boolean;\n  @Input() attributionControl?: boolean;\n  @Input() logoPosition?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n  @Input() maxTileCacheSize?: number;\n  @Input() localIdeographFontFamily?: string;\n  @Input() preserveDrawingBuffer?: boolean;\n  @Input() renderWorldCopies?: boolean;\n  @Input() trackResize?: boolean;\n  @Input() transformRequest?: Function;\n\n  /* Dynamic inputs */\n  @Input() minZoom?: number;\n  @Input() maxZoom?: number;\n  @Input() scrollZoom?: boolean;\n  @Input() dragRotate?: boolean;\n  @Input() touchZoomRotate?: boolean;\n  @Input() doubleClickZoom?: boolean;\n  @Input() keyboard?: boolean;\n  @Input() dragPan?: boolean;\n  @Input() boxZoom?: boolean;\n  @Input() style: Style | string;\n  @Input() center?: LngLatLike;\n  @Input() maxBounds?: LngLatBoundsLike;\n  @Input() zoom?: [number];\n  @Input() bearing?: [number];\n  @Input() pitch?: [number];\n\n  /* Added by ngx-mapbox-gl */\n  @Input() movingMethod: 'jumpTo' | 'easeTo' | 'flyTo' = 'flyTo';\n  @Input() movingOptions?: MovingOptions;\n  @Input() fitBounds?: LngLatBoundsLike;\n  @Input() fitBoundsOptions?: FitBoundsOptions;\n  @Input() fitScreenCoordinates?: [PointLike, PointLike];\n  @Input() centerWithPanTo?: boolean;\n  @Input() panToOptions?: AnimationOptions;\n  @Input() cursorStyle?: string;\n\n  @Output() resize = new EventEmitter<void>();\n  @Output() remove = new EventEmitter<void>();\n  @Output() mouseDown = new EventEmitter<MapMouseEvent>();\n  @Output() mouseUp = new EventEmitter<MapMouseEvent>();\n  @Output() mouseMove = new EventEmitter<MapMouseEvent>();\n  @Output() click = new EventEmitter<MapMouseEvent>();\n  @Output() dblClick = new EventEmitter<MapMouseEvent>();\n  @Output() mouseEnter = new EventEmitter<MapMouseEvent>();\n  @Output() mouseLeave = new EventEmitter<MapMouseEvent>();\n  @Output() mouseOver = new EventEmitter<MapMouseEvent>();\n  @Output() mouseOut = new EventEmitter<MapMouseEvent>();\n  @Output() contextMenu = new EventEmitter<MapMouseEvent>();\n  @Output() touchStart = new EventEmitter<MapTouchEvent>();\n  @Output() touchEnd = new EventEmitter<MapTouchEvent>();\n  @Output() touchMove = new EventEmitter<MapTouchEvent>();\n  @Output() touchCancel = new EventEmitter<MapTouchEvent>();\n  @Output() wheel = new EventEmitter<any>(); // TODO MapWheelEvent\n  @Output() moveStart = new EventEmitter<DragEvent>(); // TODO Check type\n  @Output() move = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() moveEnd = new EventEmitter<DragEvent>();\n  @Output() dragStart = new EventEmitter<DragEvent>();\n  @Output() drag = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() dragEnd = new EventEmitter<DragEvent>();\n  @Output() zoomStart = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() zoomEvt = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() zoomEnd = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() rotateStart = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() rotate = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() rotateEnd = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() pitchStart = new EventEmitter<EventData>();\n  @Output() pitchEvt = new EventEmitter<EventData>();\n  @Output() pitchEnd = new EventEmitter<EventData>();\n  @Output() boxZoomStart = new EventEmitter<MapBoxZoomEvent>();\n  @Output() boxZoomEnd = new EventEmitter<MapBoxZoomEvent>();\n  @Output() boxZoomCancel = new EventEmitter<MapBoxZoomEvent>();\n  @Output() webGlContextLost = new EventEmitter<void>();\n  @Output() webGlContextRestored = new EventEmitter<void>();\n  @Output() load = new EventEmitter<any>();\n  @Output() idle = new EventEmitter<void>();\n  @Output() render = new EventEmitter<void>();\n  @Output() error = new EventEmitter<any>(); // TODO Check type\n  @Output() data = new EventEmitter<EventData>();\n  @Output() styleData = new EventEmitter<EventData>();\n  @Output() sourceData = new EventEmitter<EventData>();\n  @Output() dataLoading = new EventEmitter<EventData>();\n  @Output() styleDataLoading = new EventEmitter<EventData>();\n  @Output() sourceDataLoading = new EventEmitter<EventData>();\n\n  get mapInstance(): Map {\n    return this.MapService.mapInstance;\n  }\n\n  @ViewChild('container') mapContainer: ElementRef;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngAfterViewInit() {\n    this.MapService.setup({\n      accessToken: this.accessToken,\n      customMapboxApiUrl: this.customMapboxApiUrl,\n      mapOptions: {\n        container: this.mapContainer.nativeElement,\n        minZoom: this.minZoom,\n        maxZoom: this.maxZoom,\n        style: this.style,\n        hash: this.hash,\n        interactive: this.interactive,\n        bearingSnap: this.bearingSnap,\n        pitchWithRotate: this.pitchWithRotate,\n        classes: this.classes,\n        attributionControl: this.attributionControl,\n        logoPosition: this.logoPosition,\n        failIfMajorPerformanceCaveat: this.failIfMajorPerformanceCaveat,\n        preserveDrawingBuffer: this.preserveDrawingBuffer,\n        refreshExpiredTiles: this.refreshExpiredTiles,\n        maxBounds: this.maxBounds,\n        scrollZoom: this.scrollZoom,\n        boxZoom: this.boxZoom,\n        dragRotate: this.dragRotate,\n        dragPan: this.dragPan,\n        keyboard: this.keyboard,\n        doubleClickZoom: this.doubleClickZoom,\n        touchZoomRotate: this.touchZoomRotate,\n        trackResize: this.trackResize,\n        center: this.center,\n        zoom: this.zoom,\n        bearing: this.bearing,\n        pitch: this.pitch,\n        renderWorldCopies: this.renderWorldCopies,\n        maxTileCacheSize: this.maxTileCacheSize,\n        localIdeographFontFamily: this.localIdeographFontFamily,\n        transformRequest: this.transformRequest\n      },\n      mapEvents: this\n    });\n    if (this.cursorStyle) {\n      this.MapService.changeCanvasCursor(this.cursorStyle);\n    }\n  }\n\n  ngOnDestroy() {\n    this.MapService.destroyMap();\n  }\n\n  async ngOnChanges(changes: SimpleChanges) {\n    await this.MapService.mapCreated$.toPromise();\n    if (changes.cursorStyle && !changes.cursorStyle.isFirstChange()) {\n      this.MapService.changeCanvasCursor(changes.cursorStyle.currentValue);\n    }\n    if (changes.minZoom && !changes.minZoom.isFirstChange()) {\n      this.MapService.updateMinZoom(changes.minZoom.currentValue);\n    }\n    if (changes.maxZoom && !changes.maxZoom.isFirstChange()) {\n      this.MapService.updateMaxZoom(changes.maxZoom.currentValue);\n    }\n    if (changes.scrollZoom && !changes.scrollZoom.isFirstChange()) {\n      this.MapService.updateScrollZoom(changes.scrollZoom.currentValue);\n    }\n    if (changes.dragRotate && !changes.dragRotate.isFirstChange()) {\n      this.MapService.updateDragRotate(changes.dragRotate.currentValue);\n    }\n    if (changes.touchZoomRotate && !changes.touchZoomRotate.isFirstChange()) {\n      this.MapService.updateTouchZoomRotate(changes.touchZoomRotate.currentValue);\n    }\n    if (changes.doubleClickZoom && !changes.doubleClickZoom.isFirstChange()) {\n      this.MapService.updateDoubleClickZoom(changes.doubleClickZoom.currentValue);\n    }\n    if (changes.keyboard && !changes.keyboard.isFirstChange()) {\n      this.MapService.updateKeyboard(changes.keyboard.currentValue);\n    }\n    if (changes.dragPan && !changes.dragPan.isFirstChange()) {\n      this.MapService.updateDragPan(changes.dragPan.currentValue);\n    }\n    if (changes.boxZoom && !changes.boxZoom.isFirstChange()) {\n      this.MapService.updateBoxZoom(changes.boxZoom.currentValue);\n    }\n    if (changes.style && !changes.style.isFirstChange()) {\n      this.MapService.updateStyle(changes.style.currentValue);\n    }\n    if (changes.maxBounds && !changes.maxBounds.isFirstChange()) {\n      this.MapService.updateMaxBounds(changes.maxBounds.currentValue);\n    }\n    if (changes.fitBounds && changes.fitBounds.currentValue) {\n      if ((this.center || this.zoom || this.pitch) && changes.fitBounds.isFirstChange()) {\n        console.warn('[ngx-mapbox-gl] center / zoom / pitch inputs are being overridden by fitBounds input');\n      }\n      this.MapService.fitBounds(changes.fitBounds.currentValue, this.fitBoundsOptions);\n    }\n    if (changes.fitScreenCoordinates && changes.fitScreenCoordinates.currentValue) {\n      if ((this.center || this.zoom || this.pitch || this.fitBounds) && changes.fitScreenCoordinates.isFirstChange()) {\n        console.warn('[ngx-mapbox-gl] center / zoom / pitch / fitBounds inputs are being overridden by fitScreenCoordinates input');\n      }\n      this.MapService.fitScreenCoordinates(\n        changes.fitScreenCoordinates.currentValue,\n        this.bearing ? this.bearing[0] : 0,\n        this.movingOptions\n      );\n    }\n    if (\n      this.centerWithPanTo &&\n      changes.center && !changes.center.isFirstChange() &&\n      !changes.zoom && !changes.bearing && !changes.pitch\n    ) {\n      this.MapService.panTo(this.center!, this.panToOptions);\n    } else if (\n      changes.center && !changes.center.isFirstChange() ||\n      changes.zoom && !changes.zoom.isFirstChange() ||\n      (changes.bearing && !changes.bearing.isFirstChange() && !changes.fitScreenCoordinates) ||\n      changes.pitch && !changes.pitch.isFirstChange()\n    ) {\n      this.MapService.move(\n        this.movingMethod,\n        this.movingOptions,\n        changes.zoom && this.zoom ? this.zoom[0] : undefined,\n        changes.center ? this.center : undefined,\n        changes.bearing && this.bearing ? this.bearing[0] : undefined,\n        changes.pitch && this.pitch ? this.pitch[0] : undefined\n      );\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport { fromEvent, merge, Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport supercluster, { Cluster, Options as SuperclusterOptions, Supercluster } from 'supercluster';\nimport { MapService } from '../map/map.service';\n\n@Directive({ selector: 'ng-template[mglPoint]' })\nexport class PointDirective { }\n\n@Directive({ selector: 'ng-template[mglClusterPoint]' })\nexport class ClusterPointDirective { }\n\n@Component({\n  selector: 'mgl-marker-cluster',\n  template: `\n    <ng-container *ngFor=\"let feature of clusterPoints\">\n      <ng-container *ngIf=\"feature.properties.cluster; else point\">\n        <mgl-marker\n          [feature]=\"feature\"\n        >\n          <ng-container *ngTemplateOutlet=\"clusterPointTpl; context: {\n            $implicit: feature,\n            getLeavesFn: getLeavesFn(feature),\n            getChildrenFn: getChildrenFn(feature),\n            getClusterExpansionZoomFn: getClusterExpansionZoomFn(feature)\n          }\"></ng-container>\n        </mgl-marker>\n      </ng-container>\n      <ng-template #point>\n        <mgl-marker\n          [feature]=\"feature\"\n        >\n          <ng-container *ngTemplateOutlet=\"pointTpl; context: { $implicit: feature }\"></ng-container>\n        </mgl-marker>\n      </ng-template>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false\n})\nexport class MarkerClusterComponent implements OnChanges, OnDestroy, AfterContentInit, OnInit {\n  /* Init input */\n  @Input() radius?: number;\n  @Input() maxZoom?: number;\n  @Input() minZoom?: number;\n  @Input() extent?: number;\n  @Input() nodeSize?: number;\n  @Input() log?: boolean;\n  @Input() reduce?: (accumulated: any, props: any) => void;\n  @Input() initial?: () => any;\n  @Input() map?: (props: any) => any;\n\n  /* Dynamic input */\n  @Input() data: GeoJSON.FeatureCollection<GeoJSON.Point>;\n\n  @Output() load = new EventEmitter<Supercluster>();\n\n  @ContentChild(PointDirective, { read: TemplateRef }) pointTpl: TemplateRef<any>;\n  @ContentChild(ClusterPointDirective, { read: TemplateRef }) clusterPointTpl: TemplateRef<any>;\n\n  clusterPoints: GeoJSON.Feature<GeoJSON.Point>[];\n\n  private supercluster: Supercluster;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService,\n    private ChangeDetectorRef: ChangeDetectorRef,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    const options: SuperclusterOptions = {\n      radius: this.radius,\n      maxZoom: this.maxZoom,\n      minZoom: this.minZoom,\n      extent: this.extent,\n      nodeSize: this.nodeSize,\n      log: this.log,\n      reduce: this.reduce,\n      initial: this.initial,\n      map: this.map\n    };\n    Object.keys(options)\n      .forEach((key: string) => {\n        const tkey = <keyof SuperclusterOptions>key;\n        if (options[tkey] === undefined) {\n          delete options[tkey];\n        }\n      });\n    this.supercluster = supercluster(options);\n    this.supercluster.load(this.data.features);\n    this.load.emit(this.supercluster);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.data && !changes.data.isFirstChange()) {\n      this.supercluster.load(this.data.features);\n      this.updateCluster();\n    }\n  }\n\n  ngAfterContentInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      const mapMove$ = merge(\n        fromEvent(<any>this.MapService.mapInstance, 'zoomChange'),\n        fromEvent(<any>this.MapService.mapInstance, 'move')\n      );\n      const sub = mapMove$.pipe(\n        startWith<any>(undefined)\n      ).subscribe(() => {\n        this.zone.run(() => {\n          this.updateCluster();\n        });\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  getLeavesFn = (feature: Cluster) => {\n    return (limit?: number, offset?: number) => (<any>this.supercluster.getLeaves)(feature.properties.cluster_id!, limit, offset);\n  }\n\n  getChildrenFn = (feature: Cluster) => {\n    return () => (<any>this.supercluster.getChildren)(feature.properties.cluster_id!);\n  }\n\n  getClusterExpansionZoomFn = (feature: Cluster) => {\n    return () => (<any>this.supercluster.getClusterExpansionZoom)(feature.properties.cluster_id!);\n  }\n\n  private updateCluster() {\n    const bbox = this.MapService.getCurrentViewportBbox();\n    const currentZoom = Math.round(this.MapService.mapInstance.getZoom());\n    this.clusterPoints = this.supercluster.getClusters(bbox, currentZoom);\n    this.ChangeDetectorRef.markForCheck();\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ViewChild,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport { PointLike, Popup, LngLatLike } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { MarkerComponent } from '../marker/marker.component';\n\n@Component({\n  selector: 'mgl-popup',\n  template: '<div #content><ng-content></ng-content></div>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PopupComponent implements OnChanges, OnDestroy, AfterViewInit, OnInit {\n  /* Init input */\n  @Input() closeButton?: boolean;\n  @Input() closeOnClick?: boolean;\n  @Input() anchor?: 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left';\n  @Input() offset?: number | PointLike | { [anchor: string]: [number, number] };\n\n  /* Dynamic input */\n  @Input() feature?: GeoJSON.Feature<GeoJSON.Point>;\n  @Input() lngLat?: LngLatLike;\n  @Input() marker?: MarkerComponent;\n\n  @Output() close = new EventEmitter<void>();\n  @Output() open = new EventEmitter<void>();\n\n  @ViewChild('content') content: ElementRef;\n\n  popupInstance?: Popup;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    if (this.lngLat && this.marker || this.feature && this.lngLat || this.feature && this.marker) {\n      throw new Error('marker, lngLat, feature input are mutually exclusive');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes.lngLat && !changes.lngLat.isFirstChange() ||\n      changes.feature && !changes.feature.isFirstChange()\n    ) {\n      const newlngLat = changes.lngLat ? this.lngLat! : <[number, number]>this.feature!.geometry!.coordinates!;\n      this.MapService.removePopupFromMap(this.popupInstance!, true);\n      const popupInstanceTmp = this.createPopup();\n      this.MapService.addPopupToMap(popupInstanceTmp, newlngLat, this.popupInstance!.isOpen());\n      this.popupInstance = popupInstanceTmp;\n    }\n    if (changes.marker && !changes.marker.isFirstChange()) {\n      const previousMarker: MarkerComponent = changes.marker.previousValue;\n      if (previousMarker.markerInstance) {\n        this.MapService.removePopupFromMarker(previousMarker.markerInstance);\n      }\n      if (this.marker && this.marker.markerInstance && this.popupInstance) {\n        this.MapService.addPopupToMarker(this.marker.markerInstance, this.popupInstance);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    this.popupInstance = this.createPopup();\n    this.addPopup(this.popupInstance);\n  }\n\n  ngOnDestroy() {\n    if (this.popupInstance) {\n      if (this.lngLat) {\n        this.MapService.removePopupFromMap(this.popupInstance);\n      } else if (this.marker && this.marker.markerInstance) {\n        this.MapService.removePopupFromMarker(this.marker.markerInstance);\n      }\n    }\n    this.popupInstance = undefined;\n  }\n\n  private createPopup() {\n    return this.MapService.createPopup({\n      popupOptions: {\n        closeButton: this.closeButton,\n        closeOnClick: this.closeOnClick,\n        anchor: this.anchor,\n        offset: this.offset\n      },\n      popupEvents: {\n        open: this.open,\n        close: this.close\n      }\n    }, this.content.nativeElement);\n  }\n\n  private addPopup(popup: Popup) {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.lngLat || this.feature) {\n        this.MapService.addPopupToMap(popup, this.lngLat ? this.lngLat : <[number, number]>this.feature!.geometry!.coordinates!);\n      } else if (this.marker && this.marker.markerInstance) {\n        this.MapService.addPopupToMarker(this.marker.markerInstance, popup);\n      } else {\n        throw new Error('mgl-popup need either lngLat/marker/feature to be set');\n      }\n    });\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CanvasSourceOptions } from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-canvas-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CanvasSourceComponent implements OnInit, OnDestroy, OnChanges, CanvasSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() coordinates: number[][];\n  @Input() canvas: string;\n  @Input() animate?: boolean;\n\n  private sourceAdded = false;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(<any>this.MapService.mapInstance, 'styledata').pipe(\n        filter(() => !this.MapService.mapInstance.getSource(this.id))\n      ).subscribe(() => {\n        this.init();\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.coordinates && !changes.coordinates.isFirstChange() ||\n      changes.canvas && !changes.canvas.isFirstChange() ||\n      changes.animate && !changes.animate.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  private init() {\n    const source = {\n      type: 'canvas',\n      coordinates: this.coordinates,\n      canvas: this.canvas,\n      animate: this.animate,\n    };\n    this.MapService.addSource(this.id, source);\n    this.sourceAdded = true;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { ImageSourceOptions } from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-image-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageSourceComponent implements OnInit, OnDestroy, OnChanges, ImageSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() url: string;\n  @Input() coordinates: number[][];\n\n  private sourceAdded = false;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(<any>this.MapService.mapInstance, 'styledata').pipe(\n        filter(() => !this.MapService.mapInstance.getSource(this.id))\n      ).subscribe(() => {\n        this.init();\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.url && !changes.url.isFirstChange() ||\n      changes.coordinates && !changes.coordinates.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  private init() {\n    this.MapService.addSource(this.id, {\n      type: 'image',\n      url: this.url,\n      coordinates: this.coordinates\n    });\n    this.sourceAdded = true;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { RasterSource } from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-raster-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RasterSourceComponent implements OnInit, OnDestroy, OnChanges, RasterSource {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() url: string;\n  @Input() tiles?: string[];\n  @Input() bounds?: number[];\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n  @Input() tileSize?: number;\n\n  type: 'raster' = 'raster'; // Just to make ts happy\n\n  private sourceAdded = false;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(<any>this.MapService.mapInstance, 'styledata').pipe(\n        filter(() => !this.MapService.mapInstance.getSource(this.id))\n      ).subscribe(() => {\n        this.init();\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.url && !changes.url.isFirstChange() ||\n      changes.tiles && !changes.tiles.isFirstChange() ||\n      changes.bounds && !changes.bounds.isFirstChange() ||\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.maxzoom && !changes.maxzoom.isFirstChange() ||\n      changes.tileSize && !changes.tileSize.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  private init() {\n    const source = {\n      type: this.type,\n      url: this.url,\n      tiles: this.tiles,\n      bounds: this.bounds,\n      minzoom: this.minzoom,\n      maxzoom: this.maxzoom,\n      tileSize: this.tileSize\n    };\n    this.MapService.addSource(this.id, source);\n    this.sourceAdded = true;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { VectorSource } from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-vector-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VectorSourceComponent implements OnInit, OnDestroy, OnChanges, VectorSource {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() url?: string;\n  @Input() tiles?: string[];\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n\n  type: 'vector' = 'vector'; // Just to make ts happy\n\n  private sourceAdded = false;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(<any>this.MapService.mapInstance, 'styledata').pipe(\n        filter(() => !this.MapService.mapInstance.getSource(this.id))\n      ).subscribe(() => {\n        this.init();\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.url && !changes.url.isFirstChange() ||\n      changes.tiles && !changes.tiles.isFirstChange() ||\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.maxzoom && !changes.maxzoom.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  private init() {\n    this.MapService.addSource(this.id, {\n      type: this.type,\n      url: this.url,\n      tiles: this.tiles,\n      minzoom: this.minzoom,\n      maxzoom: this.maxzoom,\n    });\n    this.sourceAdded = true;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { VideoSourceOptions } from 'mapbox-gl';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-video-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VideoSourceComponent implements OnInit, OnDestroy, OnChanges, VideoSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() urls: string[];\n  @Input() coordinates: number[][];\n\n  private sourceAdded = false;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.init();\n      const sub = fromEvent(<any>this.MapService.mapInstance, 'styledata').pipe(\n        filter(() => !this.MapService.mapInstance.getSource(this.id))\n      ).subscribe(() => {\n        this.init();\n      });\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.urls && !changes.urls.isFirstChange() ||\n      changes.coordinates && !changes.coordinates.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  private init() {\n    this.MapService.addSource(this.id, {\n      type: 'video',\n      urls: this.urls,\n      coordinates: this.coordinates\n    });\n    this.sourceAdded = true;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { AttributionControlDirective } from './control/attribution-control.directive';\nimport { ControlComponent } from './control/control.component';\nimport { FullscreenControlDirective } from './control/fullscreen-control.directive';\nimport { GeocoderControlDirective, MAPBOX_GEOCODER_API_KEY } from './control/geocoder-control.directive';\nimport { GeolocateControlDirective } from './control/geolocate-control.directive';\nimport { NavigationControlDirective } from './control/navigation-control.directive';\nimport { ScaleControlDirective } from './control/scale-control.directive';\nimport { DraggableDirective } from './draggable/draggable.directive';\nimport { ImageComponent } from './image/image.component';\nimport { LayerComponent } from './layer/layer.component';\nimport { MapComponent } from './map/map.component';\nimport { MAPBOX_API_KEY } from './map/map.service';\nimport { ClusterPointDirective, MarkerClusterComponent, PointDirective } from './marker-cluster/marker-cluster.component';\nimport { MarkerComponent } from './marker/marker.component';\nimport { PopupComponent } from './popup/popup.component';\nimport { CanvasSourceComponent } from './source/canvas-source.component';\nimport { FeatureComponent } from './source/geojson/feature.component';\nimport { GeoJSONSourceComponent } from './source/geojson/geojson-source.component';\nimport { ImageSourceComponent } from './source/image-source.component';\nimport { RasterSourceComponent } from './source/raster-source.component';\nimport { VectorSourceComponent } from './source/vector-source.component';\nimport { VideoSourceComponent } from './source/video-source.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    MapComponent,\n    LayerComponent,\n    DraggableDirective,\n    ImageComponent,\n    VectorSourceComponent,\n    GeoJSONSourceComponent,\n    RasterSourceComponent,\n    ImageSourceComponent,\n    VideoSourceComponent,\n    CanvasSourceComponent,\n    FeatureComponent,\n    MarkerComponent,\n    PopupComponent,\n    ControlComponent,\n    FullscreenControlDirective,\n    NavigationControlDirective,\n    GeocoderControlDirective,\n    GeolocateControlDirective,\n    AttributionControlDirective,\n    ScaleControlDirective,\n    PointDirective,\n    ClusterPointDirective,\n    MarkerClusterComponent\n  ],\n  exports: [\n    MapComponent,\n    LayerComponent,\n    DraggableDirective,\n    ImageComponent,\n    VectorSourceComponent,\n    GeoJSONSourceComponent,\n    RasterSourceComponent,\n    ImageSourceComponent,\n    VideoSourceComponent,\n    CanvasSourceComponent,\n    FeatureComponent,\n    MarkerComponent,\n    PopupComponent,\n    ControlComponent,\n    FullscreenControlDirective,\n    NavigationControlDirective,\n    GeocoderControlDirective,\n    GeolocateControlDirective,\n    AttributionControlDirective,\n    ScaleControlDirective,\n    PointDirective,\n    ClusterPointDirective,\n    MarkerClusterComponent\n  ]\n})\nexport class NgxMapboxGLModule {\n  static withConfig(config: { accessToken: string, geocoderAccessToken?: string }): ModuleWithProviders {\n    return {\n      ngModule: NgxMapboxGLModule,\n      providers: [\n        {\n          provide: MAPBOX_API_KEY,\n          useValue: config.accessToken\n        },\n        {\n          provide: MAPBOX_GEOCODER_API_KEY,\n          useValue: config.geocoderAccessToken || config.accessToken\n        }\n      ],\n    };\n  }\n}\n"]}